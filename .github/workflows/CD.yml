name: Deploying

on:
  push:
    branches: [main, setup_CI/CD]
  workflow_dispatch:
      
jobs:
  Setup:
    runs-on: ubuntu-latest
    environment:
      name: Versions
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        
      - name: 'Create env file'
        working-directory: .
        run: |
          touch .env
          echo DISCORD_CLIENT_ID=${{ secrets.DISCORD_CLIENT_ID}} >> .env
          echo DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN}} >> .env
          echo DISCORD_GUILD_ID=${{ secrets.DISCORD_GUILD_ID}} >> .env
          echo GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN}} >> .env
          echo SUPABASE_URL=${{ secrets.SUPABASE_URL}} >> .env
          echo SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY}} >> .env
          echo SUPABASE_ACCESS_TOKEN=${{ secrets.SUPABASE_ACCESS_TOKEN}} >> .env

      - name: 'Create docker image'
        working-directory: .
        run: |
          docker login -u bakkym -p ${{ secrets.DOCKERHUB_SECRET_ACCESS_KEY}}
          docker build -t bakkym/diablo4-bot .
          docker push bakkym/diablo4-bot


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Apply
        id:   apply
        run: |
          terraform init
          terraform validate
          terraform plan 
          terraform apply -auto-approve
